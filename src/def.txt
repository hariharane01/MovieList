//app is core component
//JSX - JS XML - converted to JS
//JSX - babel will converted to JS

//custom components
// 1. first letter must be capital
//2. it return a JSX element

//{}- Template syntax
//Hook - function 
//usestate - const [state, setstate] = usestate(initial value)
//state - current scenario
//state of art technology
//state of mind -


Import and export
it has two type
1.named -- import and export
2.default -- import and export


function App() {
  //JS Start
  //const name = "Hari";
  //const name1 = "aran";
  //Array of string 
  const people =["hari", "raja","arun", "surya","dhiva"]; 

  //Array of object
  const people1=[
    { name: "dhoni" ,
     pic: "https://wallpapercave.com/wp/wp6860301.jpg" 

    },
    {
      name:"raina" ,
      pic:"https://wallpapercave.com/wp/wp7468985.jpg"
    },
    {
      name:"jadeja",
        pic:"https://imgk.timesnownews.com/story/Jadeja_CSK_bcci_0.png"

    }
  
  ]

  //JS end

                                                                                                //JSX Starts
  return (
    <div className="App">
      {/* <Welcome name="hari" />
      <Welcome name="harane" /> */}

      {/* <Welcome name= {people[0]} />
      <Welcome name= {people[2]} /> */}

      {/* {people.map((personName) => (<Welcome name={people[0]}/>))}  */}

      {/* {people.map((personName) => (<Welcome name={personName}/>))}  */}
      {people1.map((usr) => (
      <Msd name={usr.name} pic={usr.pic}/>
      ))}
      
      {/* <Msd name="dhoni" 
      pic="https://wallpapercave.com/wp/wp6860301.jpg" />
      <Msd
        
      />
      <Msd name="raina" 
      pic="https://wallpapercave.com/wp/wp7468985.jpg" /> */}
      {/* <h1>hello {name}</h1>
      <h2>hello {name1}</h2> */}
      {/* <Counter/> */}
      
      
      
      {/* <AddColor/> */}
      <Book/>

    </div>
  );
                                                                                                //JSX end
}
function Book(){
  const book={
    name:"LEO",
    summary:"The film was officially announced in January 2023 under the tentative title Thalapathy 67, as it is Vijay's 67th film as a lead actor, and the official title was announced a few days later.",
    rating:'9.5',
    Poster:"https://assets.gadgets360cdn.com/pricee/assets/product/202303/Leo_1678967552.jpg"
  };
  return(
    <div className='book-container'>
      <img className='book-poster' src={book.Poster} ></img>
      <div className='book-spec'>
        <h2 className='book-name'>{book.name}</h2>
        <p className='book-rating'>{book.rating}</p>
      </div>
      <p className='book-summary'>{book.summary}</p>
    </div>

  );
}


export default App;


<div>
<ul>
        <li><Link to='/'>Home</Link></li>
        <li><Link to='/movie'>Movie List </Link></li>
        <li><Link to='/color-game'>Color Game </Link></li>
        <li><Link to='/user'> User</Link></li>
        <li><Link to="/somewhere">somewhere </Link></li>

      </ul>
       <Routes>
          <Route path='/' element={<Home />}></Route>
          <Route path='/movie' element={<MovieList movieList={movieList} setMovieList={setMovieList} />}></Route>
          <Route path='/movie/:movieId' element={<MovieDetail movieList={movieList} />}></Route>
          <Route path='/color-game' element={<AddColor />}></Route>
          <Route path='/user' element={<UserList />}></Route>
          <Route path='*' element={<NotFoundPage />}></Route>

        </Routes>
</div>



-----------------------add movie page before using formik and yup ----------------------------------------------------------------------------


import { useNavigate } from "react-router-dom";
import { useState } from 'react';
import Button from '@mui/material/Button';
import TextField from '@mui/material/TextField';
import { API } from "./global";

export function AddMovie({ movieList, setMovieList }) {
  const navigate = useNavigate();
  const [name, setName] = useState("");
  const [poster, setPoster] = useState("");
  const [rating, setRating] = useState("");
  const [summary, setSummary] = useState("");
  const [trailer, setTrailer] = useState("");
  return (
    <div>
      <div className='add-movie-form'>
        <TextField variant='outlined' label="Name"
          onChange={(event) => setName(event.target.value)}
          type='text'
          placeholder='enter name' />
        <TextField variant='outlined' label="Poster"
          onChange={(event) => setPoster(event.target.value)}
          type='text'
          placeholder='enter poster' />
        <TextField variant='outlined' label="Rating"
          onChange={(event) => setRating(event.target.value)}
          type='text'
          placeholder='enter rating' />
        <TextField variant='outlined' label="Summary"
          onChange={(event) => setSummary(event.target.value)}
          type='text'
          placeholder='enter summary' />
        <TextField variant='outlined' label="Trailer"
          onChange={(event) => setTrailer(event.target.value)}
          type='text'
          placeholder='enter Trailer' />


        <Button
          variant="contained"
          onClick={() => {
            const newMovie = {
              name: name,
              poster: poster,
              rating: rating,
              summary: summary,
              trailer: trailer,
            };

            fetch(`${API}/movie`, {
              method: "POST",
              body: JSON.stringify(newMovie),
              headers: {"Content-Type":"application/json"},

            }).then((data)=> data.json())
            .then(navigate("/movie"));


            //console.log(newMovie);
            // setMovieList([...movieList, newMovie]);
            // navigate('/movie');

          }}>Add Movie </Button>
      </div>
    </div>

  );


}

----------------------------------------------------------------------------------------------------------------------------------------------------

AddMovie component using formik

import { useNavigate } from "react-router-dom";
import Button from "@mui/material/Button";
import TextField from "@mui/material/TextField";
import { API } from "./global";
import { useFormik } from "formik";
import * as yup from "yup";

const formValidationSchema = yup.object({
  name: yup.string().required("name was must "),
  poster: yup.string().min(4),
  rating: yup.number().min(0, "need higher rating").max(10, "rating is more"),
  summary: yup.string().required("summary is must"),
  trailer: yup.string().required("trailer is must"),
});

export function AddMovie() {
  const navigate = useNavigate();

  const formik = useFormik({
    initialValues: {
      name: "",
      poster: "",
      rating: "",
      summary: "",
      trailer: "",
    },
    validationSchema: formValidationSchema,
    onSubmit: (newMovie) => {
      createMovie(newMovie);
    },
  });

  const createMovie = (newMovie) => {
    console.log("createMovie", newMovie);
    fetch(`${API}/movie`, {
      method: "POST",
      body: JSON.stringify(newMovie),
      headers: { "Content-Type": "application/json" },
    })
      .then((data) => data.json())
      .then(navigate("/movie"));
    console.log(newMovie);
  };
  return (
    <form onSubmit={formik.handleSubmit} className="add-movie-form">
      <TextField
        variant="outlined"
        label="Name"
        id="name"
        name="name"
        onChange={formik.handleChange}
        onBlur={formik.handleBlur}
        value={formik.values.name}
      />
      {formik.touched.name && formik.errors.name ? formik.errors.name : ""}
      <TextField
        variant="outlined"
        label="Poster"
        id="poster"
        name="poster"
        onChange={formik.handleChange}
        onBlur={formik.handleBlur}
        value={formik.values.poster}
      />
      {formik.touched.poster && formik.errors.poster
        ? formik.errors.poster
        : ""}
      <TextField
        variant="outlined"
        label="Rating"
        id="rating"
        name="rating"
        onChange={formik.handleChange}
        value={formik.values.rating}
        onBlur={formik.handleBlur}
      />
      {formik.touched.rating && formik.errors.rating
        ? formik.errors.rating
        : ""}
      <TextField
        variant="outlined"
        label="Summary"
        id="summary"
        name="summary"
        onChange={formik.handleChange}
        onBlur={formik.handleBlur}
        value={formik.values.summary}
      />
      {formik.touched.summary && formik.errors.summary
        ? formik.errors.summary
        : ""}
      <TextField
        variant="outlined"
        label="Trailer"
        id="trailer"
        name="trailer"
        onChange={formik.handleChange}
        onBlur={formik.handleBlur}
        value={formik.values.trailer}
      />
      {formik.touched.trailer && formik.errors.trailer
        ? formik.errors.trailer
        : ""}
      <Button type="submit" variant="contained" onClick={createMovie}>
        Add Movie
      </Button>
    </form>
  );
}
